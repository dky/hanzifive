"use strict";(()=>{var e={};e.id=638,e.ids=[638],e.modules={846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1421:e=>{e.exports=require("node:child_process")},1455:e=>{e.exports=require("node:fs/promises")},1708:e=>{e.exports=require("node:process")},3024:e=>{e.exports=require("node:fs")},3033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3873:e=>{e.exports=require("path")},4870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6095:(e,r,t)=>{t.r(r),t.d(r,{patchFetch:()=>h,routeModule:()=>l,serverHooks:()=>f,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>k});var s={};t.r(s),t.d(s,{DELETE:()=>c,GET:()=>u,PUT:()=>p});var o=t(6559),n=t(8088),a=t(7719),d=t(2190),i=t(5069);async function u(e,{params:r}){let{id:t}=await r;try{let e=await i.db.deck.findUnique({where:{id:t},include:{flashcards:{include:{tags:!0}}}});if(!e)return d.NextResponse.json({message:"Deck not found"},{status:404});let r={...e,flashcards:e.flashcards.map(e=>({...e,tags:e.tags.map(e=>e.name)}))};return d.NextResponse.json(r)}catch(e){return console.error(`Error fetching deck ${t}:`,e),d.NextResponse.json({message:"Failed to fetch deck"},{status:500})}}async function p(e,{params:r}){let{id:t}=await r;try{let{name:r,description:s}=await e.json();if(!await i.db.deck.findUnique({where:{id:t}}))return d.NextResponse.json({message:"Deck not found"},{status:404});let o={};void 0!==r&&(o.name=r),void 0!==s&&(o.description=s);let n=await i.db.deck.update({where:{id:t},data:o});return d.NextResponse.json(n)}catch(e){return console.error(`Error updating deck ${t}:`,e),d.NextResponse.json({message:"Failed to update deck"},{status:500})}}async function c(e,{params:r}){let{id:t}=await r;try{if(!await i.db.deck.findUnique({where:{id:t}}))return d.NextResponse.json({message:"Deck not found"},{status:404});return await i.db.deck.delete({where:{id:t}}),d.NextResponse.json({message:"Deck deleted successfully"})}catch(e){return console.error(`Error deleting deck ${t}:`,e),d.NextResponse.json({message:"Failed to delete deck"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/decks/[id]/route",pathname:"/api/decks/[id]",filename:"route",bundlePath:"app/api/decks/[id]/route"},resolvedPagePath:"/Users/evangelosmeklis/hanzifive/src/app/api/decks/[id]/route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:x,workUnitAsyncStorage:k,serverHooks:f}=l;function h(){return(0,a.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:k})}},6698:e=>{e.exports=require("node:async_hooks")},6760:e=>{e.exports=require("node:path")},7066:e=>{e.exports=require("node:tty")},7598:e=>{e.exports=require("node:crypto")},7975:e=>{e.exports=require("node:util")},8161:e=>{e.exports=require("node:os")},8474:e=>{e.exports=require("node:events")},9021:e=>{e.exports=require("fs")},9294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580,33],()=>t(6095));module.exports=s})();